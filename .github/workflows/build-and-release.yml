name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger only when pushing tags like v1.0.0

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygame pyinstaller

      - name: Build executable with PyInstaller
        run: |
          mkdir -p dist
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --onefile --noconsole --add-data "assets;assets" main.py
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            pyinstaller --onefile --windowed --add-data "assets:assets" main.py
          else
            pyinstaller --onefile --windowed --add-data "assets:assets" main.py
          fi
        shell: bash

      - name: Debug dist contents
        run: ls -R dist
        shell: bash

      - name: Rename and move binary
        run: |
          mkdir -p release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/main.exe release/space-shooter-windows.exe
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv dist/main release/space-shooter-macos
          else
            mv dist/main release/space-shooter-linux
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: space-shooter-${{ matrix.os }}
          path: release/*

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloads

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: downloads/**/*
